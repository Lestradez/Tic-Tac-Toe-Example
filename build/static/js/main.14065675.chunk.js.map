{"version":3,"sources":["index.js"],"names":["Square","props","className","squareClass","onClick","value","Board","state","squares","Array","fill","xIsNext","lastSquare","i","this","rows","j","push","renderSquare","createSquares","React","Component","Game","history","stepCoordinates","stepNumber","slice","length","rowPos","colPos","board","k","calcCoordinates","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","coordinates","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14065675.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className={props.squareClass} onClick={ props.onClick}>\r\n      {props.value}\r\n    </button> \r\n  );\r\n  \r\n}\r\n\r\nclass Board extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      squares: Array(9).fill(null),\r\n      xIsNext: true,\r\n      lastSquare: null,\r\n    };\r\n    \r\n  }\r\n    \r\n  renderSquare(i) {\r\n      return <Square \r\n      value={this.props.squares[i]}\r\n      squareClass={(i===this.props.lastSquare)? 'square current':'square'} \r\n      onClick={ ()=>this.props.onClick(i)}\r\n    />;\r\n  }\r\n\r\n  createSquares() {\r\n    let rows = [];\r\n    for(var i = 0; i < 3; i++){\r\n      let squares = [];\r\n      for(var j = 0; j < 3; j++){\r\n        squares.push(this.renderSquare(3*i+j));\r\n      }\r\n      rows.push(<div className=\"board-row\">{squares}</div>);\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  render() {\r\n\r\n    return <div className=\"board\">{ this.createSquares() }</div> \r\n    \r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      history : [{\r\n        squares: Array(9).fill(null),\r\n        stepCoordinates:'',\r\n        lastSquare: null,\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      //squareClass: 'scuare',\r\n    };\r\n  }\r\n\r\n\r\n  handleClick(i){\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length-1];\r\n    const squares = current.squares.slice();\r\n    const stepCoordinates= calcCoordinates(i);\r\n    if (calculateWinner(squares) || squares[i]){\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares:squares,\r\n        stepCoordinates: stepCoordinates,\r\n        lastSquare: i,\r\n      }]),      \r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step){\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step%2)===0,\r\n    });\r\n  }\r\n\r\n  \r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner( current.squares);\r\n    //const squareClass = 'square';\r\n    const moves = history.map((step,move)=>{\r\n      const coordinates = step.stepCoordinates;\r\n      const desc = move ?\r\n      'Go to move#' + move :\r\n      'Go to game start';     \r\n      return(\r\n        <li key={move}>\r\n          <button onClick = {()=> this.jumpTo(move)}>{desc}</button>\r\n          <label>{coordinates}</label>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner){  \r\n      status = 'Winner is: ' + winner;      \r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X':'O');\r\n    }\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n            squares = {current.squares}\r\n            stepCoordinates = {current.stepCoordinates}\r\n            lastSquare = {current.lastSquare}\r\n            onClick = {(i)=>{this.handleClick(i)}} />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{ status }</div>\r\n          <ol>{ moves }</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction calcCoordinates(i){\r\n  const board = [\r\n    [0,1,2],\r\n    [3,4,5],\r\n    [6,7,8],\r\n  ];\r\n  let rowPos;\r\n  let colPos;\r\n  for(let j=1;j<=3;j++) {\r\n    for(let k=1;k<=3;k++){ \r\n      if(i===board[j-1][k-1]){\r\n        rowPos = j;\r\n        colPos = k;\r\n      };\r\n  };\r\n  };\r\n\r\n  return '(' + colPos + ',' + rowPos + ')';\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}